---
title: Contextual cuing survives an interruption from an endogenous cue for attention
shorttitle: Contextual cuing and endogenous cuing
author:
  - name: Tom Beesley
    corresponding: true
    orcid: 0000-0003-2836-2743
    email: t.beesley@lancaster.ac.uk
    affiliation: 
      - ref: LU
  - name : Louise Earl 
    affiliation: 
      - ref: LU
  - name: Hope Butler 
    affiliation: 
      - ref: LU
  - name: Inez Sharp 
    affiliation: 
      - ref: LU
  - name: Ieva Jaceviciute 
    affiliation: 
      - ref: LU
  - name: David Luque 
    affiliation: 
      - ref: MU
affiliations:
  - id: LU
    name: Lancaster University
    country: UK
    address: Department of Psychology, Lancaster University, UK, LA1 4YD
  - id: MU
    name: Universidad de Málaga
    country: Spain
abstract: |
  | Three experiments explored how the repetition of a visual search display guides search during contextual cuing under conditions in which the search process is interrupted by an instructional (endogenous) cue for attention. In Experiment 1, participants readily learnt about repeated configurations of visual search, before being presented with an endogenous cue for attention towards the target on every trial. Participants used this cue to improve search times, but the repeated contexts continued to guide attention. Experiment 2 demonstrated that the presence of the endogenous did not impede the acquisition of contextual cuing. Experiment 3 confirmed the hypothesis that the contextual cuing effect relies largely on localised distractor contexts, following the guidance of attention. Together, the experiments point towards an interplay between two drivers of attention: after the initial guidance of attention, memory representations of the context continue to guide attention towards the target, suggesting that CC representations are flexibly deployed when the search procedure is dramatically interrupted.  
  | Public significance statement: This study provides a test of how attention is governed by different aspects of the environment. We examine whether the control of attention by an instructional stimulus (an arrow that directs attention) will interfere with the way in which attention is governed by other learnt visual patterns in the environment. 
keywords: [visual search; incidental learning; contextual cuing; attention; endogenous cuing]
bibliography: bibliography.bib
format:
  apaquarto-pdf:
    link-citations: true
    numbered-lines: true
    fig-pos: 'H'
    documentmode: man
    keep-tex: true
    citeproc: false
    filters: 
      - at: pre-render
        path: "citeproc.lua"
      - at: pre-render
        path: "wordcount.lua"
execute:
  echo: false
  warning: false
editor_options: 
  chunk_output_type: console
floatsintext: true
nocite: |
  @cousineau2005
---

```{r setup}

library(tidyverse)
library(citr)
library(papaja)
library(english)
library(extrafont)
library(afex) 
library(BayesFactor)
library(effectsize)
library(apa)
library(pwr) # power calculations
library(lsr) # effect size estimate
library(patchwork)

# removed from yaml format
  # apaquarto-docx: default
  # apaquarto-html: default
  # apaquarto-pdf:
  #   fig-pos: 'H'
  #   documentmode: man
  #   keep-tex: true


options(digits = 2) #set to two decimal 

# function used to set rounding and presentation of decimals to specific length
spec_dec <- function(x, k) trimws(format(round(x, k), nsmall=k)) # useful for controlling decimals

# function to force scientific formatting of numbers (used for large BFs)
changeSciNot <- function(n) {
  output <- format(n, scientific = TRUE, digits = 2) #Transforms the number into scientific notation even if small
  output <- sub("e", " × 10^", output) #Replace e with 10^
  output <- sub("\\+0?", "", output) #Remove + symbol and leading zeros on exponent, if > 1
  output <- sub("-0?", "-", output) #Leaves - symbol but removes leading zeros on exponent, if < 1
  output <- paste0(output,"^") # makes the exponent superscript
  output
}

#setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set wd to current file location

# function to extract and report BFs with error %s
report_BF_and_error <- function(BF_in, sci_not = TRUE, hyp = "alt"){
  
  if (hyp == "alt") {
    BF_notation = "BF~10~ = "
  } else if (hyp == "null") {
    BF_notation = "BF~01~ = "
  } else if (hyp == "mc") {
    BF_notation = "BF = "
  }
  
  if (sci_not == TRUE) {
    BF_value = changeSciNot(extractBF(BF_in)$bf) # change to sci notation
  } else {
    BF_value = round(extractBF(BF_in)$bf,2) # otherwise round
  }
  
  paste0(BF_notation, 
         BF_value, 
         " &plusmn; ", 
         round(100*extractBF(BF_in)$error,2), 
         "%")
}

# set number of iterations for the Bayesian MC process

numIterations = 500

#update bib file
# rbbt::bbt_update_bib(path_rmd = "CCEC_ms1.qmd",
#                      ignore = c("fig-schematic", "fig-RT-exp1", "fig-RT-exp2", "fig-RT-exp3"))


```

```{r set-ggplot-theme}

# set global ggplot theme properties

theme_set(theme_classic(base_size = 14))

theme_update(axis.title = element_text(face = "bold", size = 14),
             axis.text = element_text(size = 12),
             legend.text = element_text(size = 12),
             legend.spacing.x = unit(0.4, "cm"))

cbPalette <- c("#C1272D", "#E69F00", "#56B4E9", "#008176", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")



```

It is well established that the process of visual search is guided by past experience. When we encounter a scene, the extent to which the stimuli within that scene match representations in memory will determine the effectiveness of the stimulus processing and subsequent search through the scene. This cognitive process is studied in the lab using the contextual cuing (CC) task: participants typically experience a standard visual search task (i.e., serial processing; slow search), such as searching for a T amongst L shapes. A set of search configurations is repeated across trials, and response times to targets are faster compared to those in configurations that do not repeat. Thus, the repetition of the search configurations leads to the formation of a representation of the configuration in memory, and future processing of the same configuration activates this representation, driving more efficient behaviour within that scene.

Much work has focused on the nature of the memory and attention processes responsible for contextual cuing. The effect was initially suggested to be implicit in nature, with repeated configurations seemingly guiding search unconsciously: typically participants are unable to articulate their knowledge of the repeated configurations, and show poor ability to recognise learnt configurations in memory tests [e.g., @chun1998; @colagiuri2016], although this view of CC has been strongly contested [e.g., @smyth2008; @vadillo2016]. There are also a number of plausible computational models of how memory representations of repeated configurations are formed and result in the CC effect [e.g., @beesley2015b; @brady2007]. The predominant view is that the memory representations are best characterised as associative in nature, whereby distractors [or groups of distractors, see @beesley2016] form associations that activate more strongly the contingent target position within each repeated configuration.

The exact nature of how repeated configurations come to facilitate visual search is the focus of much debate within the literature. Broadly there are two quite distinct theoretical accounts of why responses are faster for repeated configurations: the early attentional guidance account, and the late response facilitation account. According to the early account, recognition of the configuration leads to a more efficient search process through the distractor array, such that the target is localised (fixated) at an earlier time point in search. Perhaps the clearest (and arguably simplest) evidence in support of this account comes from studies of eye-tracking during CC. For example, search through repeated configurations results in fewer fixations prior to target localisation [e.g., @beesley2018; @tseng2004]. According to the late response facilitation account, the benefit for repeated configurations comes about as a result of enhanced target processing once it has been localised by attention. One conceptualisation of this process is that repeated configurations lead to a reduction in the evidence threshold required to ascertain that the target is present in its location, such that responses can be initiated earlier. Such an account has been put forward by @sewell2018, in order to explain the evidence supporting the late account from response time modelling of the CC effect.

It seems likely that the both early and late processes contribute to the overall CC effect [for a review see @sisk2019]. The current article focuses on exploration of the early-stage attentional account of CC. The term "early" here reflects the fact that the CC benefit is present prior to the detection of the target and the initiation of the response to the target. In fact, the "early" phase can be further divided. Analysis of eye-movements has shown that serial visual search can be defined as having two distinct phases: an initial ineffective search in which the direction of saccades is not consistent (arguably random) and a secondary effective phase in which each saccade will draw attention closer to the target. CC appears to result from having more trials with a shorter ineffective phase.

One interpretation of these data is that CC is initially random, and that the initial distractor processing is not beneficial for CC. Supporting evidence for this account comes from @olson2002, where participants were trained on a CC task in which either all the distractors repeated, those in the half of the screen containing the target (short-range-context), or those in the half of the screen that didn't contain the target (long-range-context). CC was observed in the short-range-context, but not in the long-range-context condition. Thus it would appear that the distractors further from the target are not critical to the generation of a CC effect.

@brady2007's computational account features a mechanism that ensures spatial constraints are placed on the learning of associations with relation to their proximity to the target. If the spatial constraints are tuned to modulate learning and restrict associative formations to only those distractors close to the target, this model can accurately model the data from @olson2002. Since the only consequential mechanism in the model for CC is the associative weights (and their modulation by spatial constraints), then one prediction that follows from this account is that the initial phase of search is inconsequential for observing CC.

In contrast to the localised facilitation account, it's possible that contextual cuing involves learning of a procedural template that guides eye-movements in a consistent pattern for each repeated configuration. While the initial process may be inefficient in nature, it may nevertheless be an important part of the procedural response in terms of the sequence of eye-movements. Recent experiments from @seitz2023 suggests that more generic scanning behaviour forms part of the procedural knowledge that contributes to CC. The current article provides a test of this prediction by significantly interrupting the search process with an endogenous cue for attention. In all experiments participants complete a contextual cuing visual search task but are also presented with an arrow that signals the side of the screen on which the target will appear. Thus, this cue disrupts the natural search process, eliminating entirely the early phase of search. The experiments therefore examine the extent to which this initial part of the search process is truly inconsequential for the observation of the CC effect. 

In the current experiments we explored how CC is affected by the interruption of the search process by a clear direction of attention from an endogenous cue. In Experiment 1 we examine whether a learnt pattern of behaviour is disrupted due to the onset of the endogenous cue, while in Experiment 2 we seek to establish whether the CC effect is weaker under these conditions. Experiment 3 explores the underlying drivers of the CC effect, in terms of the distractor-target associations, during these procedures.

```{r exploratory-anaysis}

data_raw <- readRDS("combinedData.rds")

# # get summary stats 
# 
# # how many participants in each experiment
# data_raw %>%
#   group_by(exp) %>% 
#   summarise(num_Ps = n_distinct(subj))
# 
# # mean RT by participant
# summary_rt <- 
#   data_raw %>% 
#   filter(timeout == 0,
#          acc == 1) %>% 
#   group_by(exp, subj) %>% 
#   summarise(meanRT = mean(RT))
# 
# # plot as violin
# summary_rt %>% 
#   ggplot(aes(x = exp, y = meanRT)) +
#   geom_violin(aes(fill = exp)) +
#   geom_dotplot(binaxis = "y",
#                stackdir = "center",
#                dotsize = 2,
#                binwidth = 25,
#                alpha = .3)
# 
# # mean acc by participant
# summary_acc <- 
#   data_raw %>% 
#   filter(timeout == 0) %>% 
#   group_by(exp, subj) %>% 
#   summarise(meanAcc = mean(acc))
# 
# # plot as violin
# summary_acc %>% 
#   ggplot(aes(x = exp, y = meanAcc)) +
#   geom_violin(aes(fill = exp)) +
#   geom_dotplot(binaxis = "y",
#                stackdir = "center",
#                binwidth = .01,
#                dotsize = 1,
#                alpha = .3)


```

# Experiment 1

Experiment 1 sought to examine whether the learnt attentional behaviour that develops during contextual cuing is still expressed when participants are directed by an endogenous (instructional) cue to search in a particular region of the visual scene, hindering the operation of early-stage visual search processes. Participants were first trained with a set of four repeating configurations in phase 1 across 5 epochs of 32 trials each. Then prior to phase 2, participants were told that an arrow would appear before every trial indicating the side of the screen on which the target would be located. This arrow was valid on every trial. In phase 2, the repeating configurations were presented in two forms: "consistent", where the target appeared in the same position as it has appeared for that configuration in phase 1; and "inconsistent", where the target appeared in a position in the opposite quadrant of the screen from where it had appeared in phase 1. Random configurations were also presented in this phase. The inclusion of the inconsistent trials in this phase provides a test of whether the distractors processed in the early stages of search continue to guide attention in the presence of the endognenous cue. If this is the case, we would also expect that the contextual cues would guide attention *away* from the (new) target quadrant on inconsistent trials, and so response times should be slower on these trials compared to those on random trials.

## Method

### Participants

```{r demographics_exp1}

# get basic stats for Ps

data_exp1 <- 
  data_raw %>% 
  filter(exp == "CCC01")

# rename TT variable
data_exp1 <- 
  data_exp1 %>% 
  mutate(TT = fct_recode(TT, 
                         "Repeated: consistent" = "repeated_con",
                         "Repeated: inconsistent" = "repeated_incon",
                         "Random: consistent" = "random_con",
                         "Random: inconsistent" = "random_incon")) %>% 
  mutate(TT = fct_relevel(TT, 
                          "Repeated: consistent", 
                          "Repeated: inconsistent",
                          "Random: consistent",
                          "Random: inconsistent"))

demographics <- 
  data_exp1 %>% 
  group_by(subj) %>% 
  slice(1) %>% 
  select(subj, age, gender)

```

`r Words(nrow(demographics))` undergraduate students from Lancaster University were recruited (mean age = `r round(mean(demographics$age),1)`, SD = `r round(sd(demographics$age),1)`; `r sum(demographics$gender=="f")` identified as female and `r sum(demographics$gender=="m")` as male) via the Psychology Research Participation System in the Department of Psychology at Lancaster University, in return for the opportunity to use the recruitment system for their own research in future years. Analysis of the current experiments was performed with Bayesian methods, seeking support for either the null or alternative hypothesis on critical tests. As such we aimed for the maximum sample size that could be achieved by the resources of the experimenter (approximately 30). These sample sizes were similar to much of our previous lab work with contextual cuing tasks.

### Materials

Participants were tested individually in a quiet room with a Dell laptop with a 15.6" screen, a screen resolution of 1920 x 1080, and a full size external keyboard for participants to use to respond to the task. Participants sat approximately 50 cm from the screen. Stimulus presentation was controlled by MATLAB using the Psychophysics Toolbox extensions (Brainard, 1997; Kleiner, Brainard & Pelli, 2007; Pelli, 1997). Responses to the target stimulus were made by pressing the 'c' or 'n' key on a standard keyboard. All experimental materials are available at the github repository for this study.

Distractor stimuli were an 'L' shape (rotated 0°, 90°, 180°, or 270°) while the target stimulus was a 'T' shape (rotated at either 90° or 270°). Stimuli were 8 mm square and arranged in a square grid of 144 evenly spaced cells (12 x 12) which was positioned centrally on the screen and was 170 mm square. The grid itself was invisible to participants. The fixation cross (displayed centrally before each trial) was 4 mm square. The background of the screen was grey (RGB: .6, .6, .6) and the stimuli were presented in black (RGB: 1, 1, 1). There was a small offset in the vertical line of the 'L' distractors, which increased the similarity between the 'L' distractors and the target 'T', making the search task more difficult (Duncan & Humphreys, 1989).

### Design

Phase 1 employed a within-subjects design with factors of epoch (1-5) and configuration (repeated and random). All configurations contained 16 distractors, equally divided between the four quadrants of the display, and one target. Four repeated configurations were trained[^1]. Four target locations were used, with one from each quadrant assigned to each of the repeated configurations. These same four target positions were used for the random configurations throughout the task. Each of these four target positions was chosen at random from one of five locations within each quadrant, that were approximately equidistant from the center of the screen. Distractors could not appear in these target locations.

[^1]: Though CC experiments may frequently train 8 or 12 repeated configurations, it has been established that participants typically learn only a subset of these [@smyth2008]. In order to avoid simply adding unnecessary noise to our measure of CC, our lab typically trains just 4 repeated configurations in our CC procedures. 

Phase 2 employed a within-subjects design with factors of epoch (6-10) and configuration (repeated: consistent; repeated: inconsistent; random: consistent; random:inconsistent). On each trial, there was a .5 probability that an "inconsistent" version of the configuration would be presented. This meant that the target was relocated to a diametrically opposed target position such as to maximise the displacement from the trained target position (see @fig-schematic). This could occur for both the repeated and random configurations, hence creating four unique trial types for this phase. While random configurations did not have a "trained", associated, target position, it is necessary to divide the random trials into consistent and inconsistent trial types in this way in order to assess any target frequency effects that may occur, since the inconsistent target locations used in this phase were novel.

![Schematic of the manipulation of target position in consistent and inconsistent trials of phase 2. The dashed lines show the division of the stimuli into quadrants, but were not present in the task procedure.](Schematic.png){#fig-schematic fig-cap-location="bottom"}

### Procedure

Participants were tested individually in a quiet testing room. They were given instructions on how to complete the task, including the presentation of an example of a search trial. Participants were shown the two correct responses for the two possible orientations of targets.

Each trial commenced with a fixation cross presented in the center of the screen for 500 ms, which was then replaced immediately by the search configuration. Participants searched for the target stimulus and responded with a left or right response depending on its orientation. Reaction times (RTs) were recorded from the onset of the search configuration. Following a valid response (c or n), the configuration was removed from the screen. The ITI was 1000 ms. If participants made an incorrect response to the target orientation, "INCORRECT RESPONSE" appeared in red in the center of the screen for 3000 ms, prior to the ITI. If participants did not respond within 6000 ms, "TIMEOUT - TOO SLOW" appeared in red in the center of the screen for 3000 ms, prior to the ITI.

Each block of eight trials contained each of the four different repeated configurations and four random configurations. These eight configurations could appear in any order with the constraint that the position of the target did not repeat across trials or across consecutive blocks.

A rest break of 30 seconds was given every 80 trials. Trials started automatically after these breaks.

After 160 trials, prior to phase 2, participants were given an instruction screen which detailed the arrow that would appear on the screen prior to the configuration. They were able to ask any questions they had at this stage and then proceeded to phase 2. The arrow appeared for 1000ms following the fixation cross, before the presentation of the search configuration. The task was otherwise identical to that used in phase 1.

## Results

```{r exclusions_exp1}

# participant exclusions 

to_summary <- 
  data_exp1 %>% 
  group_by(subj) %>% 
  summarise(meanTO = mean(timeout)) %>% 
  mutate(z_meanTO = scale(meanTO)[,1])

acc_summary <- 
  data_exp1 %>% 
  group_by(subj) %>% 
  summarise(meanAcc = mean(acc, na.rm = TRUE)) %>% 
  mutate(z_meanAcc = scale(meanAcc)[,1])

rt_summary <- 
  data_exp1 %>% 
  filter(acc == 1) %>% 
  group_by(subj) %>% 
  summarise(meanRT = mean(RT, na.rm = TRUE)) %>% 
  mutate(z_meanRT = scale(meanRT)[,1])

# combine these into one dataframe
resp_summary_exp1 <- 
  to_summary %>% 
  left_join(acc_summary, by = "subj") %>% 
  left_join(rt_summary, by = "subj")

# is anyone an outlier in terms of timeouts?
outlier_to <- 
  resp_summary_exp1 %>% 
  filter(z_meanTO < -2.5 | z_meanTO > 2.5)

# is anyone an outlier in terms of accuracy?
outlier_acc <- 
  resp_summary_exp1 %>% 
  filter(z_meanAcc < -2.5 | z_meanAcc > 2.5)

# is anyone an outlier in terms of rt?
outlier_rt <- 
  resp_summary_exp1 %>% 
  filter(z_meanRT < -2.5 | z_meanRT > 2.5)

participants_removed <- 
  bind_rows(outlier_to, outlier_acc, outlier_rt) %>% 
  select(subj) %>% 
  mutate(subj = as.character(subj)) %>% 
  unique() %>% 
  pull()



```

```{r rm_outliers_exp1}

# remove the participant outliers from the data
data_exp1_OR <- 
  data_exp1 %>% 
  filter(!subj %in% participants_removed)

# remove the timeouts and inaccurate trials
data_exp1_OR <- 
  data_exp1_OR %>% 
  filter(timeout == 0,
         acc == 1) %>% 
  group_by(subj) %>% 
  mutate(zRT = scale(RT)[,1]) # calculate z scores on participant basis

# get a summary of the RT outlier removal
rt_outlier_summary <- 
  data_exp1_OR %>% 
  group_by(subj) %>% 
  summarise(prop_rem = mean(zRT < -2.5 | zRT > 2.5))

# was anyone an outlier in prop removed?
outlier_prop_removed <- 
  rt_outlier_summary %>% 
  mutate(z_prop_rem = scale(prop_rem)[,1]) %>% 
  filter(z_prop_rem < -2.5 | z_prop_rem > 2.5)

# remove the outlier RTs from the data 
data_e1_f <-
  data_exp1_OR %>%
  ungroup() %>%
  filter(zRT > -2.5 & zRT < 2.5) # keep data in this range

```

Our criterion for removing outlier data, at both the participant level and the trial level, was 2.5 standard deviations above or below the mean of the sample. On average, trials ended with a timeout on `r spec_dec(100*mean(resp_summary_exp1$meanTO),2)`% of trials (SD = `r spec_dec(100*sd(resp_summary_exp1$meanTO),2)`). `r Words(nrow(outlier_to))` participants had an usually high proportion of timeouts and were removed from the analysis. The mean accuracy of participants (not including timeout trials) was `r spec_dec(100*mean(resp_summary_exp1$meanAcc),2)`% (SD = `r spec_dec(100*sd(resp_summary_exp1$meanAcc),2)`%). `r Words(nrow(outlier_acc))` participant had an unusually low proportion of accurate trials and was also removed. The only participant deemed to be an outlier in terms of mean response time (hereafter RT) was also excluded on the basis of the timeout criterion, noted above. For the remaining `r words(nrow(rt_outlier_summary))` participants we removed trials with a timeout and inaccurate trials, before removing outliers from the RT data. On average, the proportion of outliers removed was `r spec_dec(100*mean(rt_outlier_summary$prop_rem),2)`% (SD = `r spec_dec(100*sd(rt_outlier_summary$prop_rem),2)`%). `r Words(nrow(outlier_prop_removed))` participants had an unusual proportion of trials removed as outlier RTs (greater than 2.5 SDs above the mean).

```{r rt_summary_exp1}
# compute grand mean RT 
grand_mean_e1 <- mean(data_e1_f$RT)

# create subj level mean and normalised RT variable
data_e1_f <- 
  data_e1_f %>%
  group_by(subj) %>% 
  mutate(subj_mean_rt = mean(RT),
         normRT = RT - subj_mean_rt + grand_mean_e1) %>% 
  select(-subj_mean_rt)

# summarise the data across the 10 epochs, by subj
rt_summary_data_e1 <- 
  data_e1_f %>% 
  group_by(subj, epoch, TT) %>% 
  summarise(meanRT = mean(RT),
            mean_norm_RT = mean(normRT)) # used for normalised SE bars

# explore whether all Ps showed reduction in RTs phase 1 to phase 2 - yes they did
by_subj_avgRT_transition_e1 <- 
  data_e1_f %>%
  filter(epoch %in% c(4:7)) %>%
  group_by(subj, epoch) %>%
  summarise(meanRT = mean(RT)) %>%
  pivot_wider(names_from = epoch, names_prefix = "epoch_", values_from = meanRT) %>%
  rowwise() %>%
  mutate(drop_in_RT = mean(c(epoch_4,epoch_5)) - mean(c(epoch_6,epoch_7)))

# calculate CC effect across phases
CC_transition_by_subj <- 
  data_e1_f %>%
  filter(str_detect(TT, pattern = "inconsistent", negate = TRUE)) %>%
  mutate(phase = case_when(epoch %in% c(3:5) ~ 1,
                           epoch %in% c(6:8) ~ 2)) %>% 
  drop_na(phase) %>% 
  group_by(subj, TT, phase) %>%
  summarise(meanRT = mean(RT)) %>% 
  mutate(TT =  case_match(TT, 
                          "Repeated: consistent" ~"rep",
                          "Random: consistent" ~"rand")) %>% 
  group_by(subj, phase) %>% 
  summarise(CC_effect = meanRT[2] - meanRT[1])

CC_transition_by_subj$phase <-  as.factor(CC_transition_by_subj$phase)

bf_transition_exp1 <- 
  BayesFactor::ttestBF(CC_transition_by_subj$CC_effect[CC_transition_by_subj$phase==1],
                       CC_transition_by_subj$CC_effect[CC_transition_by_subj$phase==2],
                       paired = TRUE) 

CC_transition_summary <- 
  CC_transition_by_subj %>% 
  group_by(phase) %>% 
  summarise(meanCC = mean(CC_effect),
            sdCC = sd(CC_effect))

```

```{r generate-fig1}
factorLbls <- c("Repeated: Consistent", "Random: Consistent", "Repeated: Inconsistent", "Random: Inconsistent")

# summarise at the group level and plot
rt_all_exp1 <-
  rt_summary_data_e1 %>%
  separate(TT, into = c("config", "targ_pos"), sep = ": ") %>%   # split the TT into factors of Config and target consistency
  mutate(targ_pos = case_match(targ_pos, 
                               "consistent" ~ "Consistent",
                               "inconsistent" ~ "Inconsistent")) %>% 
  mutate(config = as.factor(fct_relevel(config, "Repeated", "Random")),
         targ_pos = as.factor(fct_relevel(targ_pos, "Consistent", "Inconsistent")))


rf_fig_exp1 <-
  rt_all_exp1 %>%
  group_by(epoch, config, targ_pos) %>%
  summarise(group_RT = mean(meanRT),
            group_SE = sd(mean_norm_RT)/sqrt(n())) %>%
  ggplot(aes(x = epoch, y = group_RT)) +
  geom_line(aes(group = interaction(config, targ_pos)), size = .5) +
  geom_errorbar(aes(ymin = group_RT - group_SE,
                    ymax = group_RT + group_SE),
                width = .2,
                size = .5) +
  geom_point(aes(fill = interaction(config, targ_pos),
                 shape = interaction(config, targ_pos)), size = 5) +
  labs(y = "RT (ms)",
       x = "Epochs of 32 trials") +
  scale_fill_manual(name = "",
                    labels = factorLbls,
                    values= c(cbPalette[c(1,3)],c(cbPalette[c(1,3)]))) +
  scale_shape_manual(name = "",
                     labels = factorLbls,
                     values = c(21,21,22,22)) +
  theme(legend.position = c(0.25,.2),
        legend.direction = "vertical") +
  guides(fill = guide_legend(byrow = TRUE)) +
  scale_y_continuous(limits = c(1000, 2400), breaks = seq(1000, 2400, 200))

phase2_avg_col <-
  rt_all_exp1 %>%
  filter(epoch %in% c(6:10)) %>%
  group_by(config, targ_pos) %>%
  summarise(group_RT = mean(meanRT),
            group_SE = sd(mean_norm_RT)/sqrt(n())) %>%
  ggplot(aes(x = targ_pos, y = group_RT, fill = config)) +
  geom_errorbar(aes(ymin = group_RT,
                    ymax = group_RT + group_SE),
                width = .2,
                size = .5,
                position = position_dodge(.8)) +
  geom_col(colour = "black", size = 0.5, width = .8, position = position_dodge()) +
  scale_fill_manual(name = "",
                    labels = c("Repeated", "Random"),
                    values= c(cbPalette[c(1,3)],c(cbPalette[c(1,3)]))) +
  coord_cartesian(ylim = c(1200,1600)) +
  theme(plot.title = element_text(size = 10, hjust = 0.5, face = "bold"),
        plot.background = element_rect(fill = "#f2f2f2", colour = "black"),
        panel.background = element_rect(fill = "#f2f2f2"),
        legend.position = c(0.5,0.9),
        legend.background = element_blank(),
        legend.direction = "vertical",
        legend.text = element_text(size = 8),
        legend.key.size = unit(0.4, "cm"),
        axis.title.x = element_blank(),
        axis.text.x = element_text(size = 8),
        axis.text.y = element_text(size = 8),
        axis.title.y = element_text(size = 10)) +
  labs(y = "RT (ms)",
       title = "Phase 2 averages")
```

```{r show-fig1}
#| label: fig-RT-exp1
#| fig-cap-location: bottom
#| out-width: 80%
#| out-height: 70%
#| fig-cap: RT data for Experiment 1. The phase 2 averages across the four trial types are shown inset. Within-subject error bars were computed by a process of normalising the RT data for the sample (Cousineau, 2005).

rf_fig_exp1 + inset_element(phase2_avg_col, 0.55, 0.5, 1, 1)

```

@fig-RT-exp1 shows the RT data across the 10 epochs of the experiment. In phase 1 (epochs 1-5) a contextual cuing effect emerged, with faster responses to repeated over random configurations. In phase 2, the presence of the guiding arrow led to a clear reduction in the response times. For all participants, the mean RT across epochs 4 and 5 was higher than the mean RTs across epochs 6 and 7. Despite the clear evidence for the processing of the endogenous cue, the underlying search configuration continued to play a role in the guidance of attention, with faster response times for (consistent) repeated configurations compared to random configurations.

```{r phase_1_BFs_exp1}
# Experiment 1 stats

# Statistics on Phase 1

phase_1 <- 
  rt_summary_data_e1 %>% 
  mutate(epoch = as.factor(epoch)) %>% 
  filter(epoch %in% c(1:5))

e1_phase1_BF <- 
  anovaBF(meanRT ~ TT * epoch + subj, 
          data = phase_1,
          whichRandom = "subj",
          iterations = numIterations)

# computing effect sizes
e1_phase1_ES <- effectsize::eta_squared(aov_car(meanRT ~ Error(subj/TT*epoch), data = phase_1), 
                                        partial = TRUE)


exp_1_CC <- 
  phase_1 %>% 
  group_by(subj, TT) %>% 
  summarise(meanRT = mean(meanRT))

effectsize::cohens_d(Pair(meanRT[TT == "Repeated: consistent"],
                     meanRT[TT == "Random: consistent"]) ~ 1,
                     data = exp_1_CC)

```

These data were analysed with a Bayesian ANOVA[^2], using the *BayesFactor::anovaBF()* function in R. All analyses in this study used the default parameters for the priors, which "places mass in reason-able ranges \[of effect sizes\] without being overcommitted to any one point" [@rouder2017, p. 317]. First taking the data from phase 1 (epochs 1-5), there was strong support for the model containing the factors of epoch and configuration (repeated vs. random), `r report_BF_and_error(e1_phase1_BF[3])`. The addition of the interaction term did not improve the model fit, `r report_BF_and_error(e1_phase1_BF[4]/e1_phase1_BF[3], sci_not = FALSE, hyp = "mc")`, though there was no evidence for the absence of the interaction. The best fitting model was a better fit than the two models containing only one of the factors, smallest `r report_BF_and_error(e1_phase1_BF[3]/e1_phase1_BF[1], sci_not = FALSE, hyp = "mc")`, providing strong support for both the effects of configuration and epoch. Partial eta-squared ($n^2_p$) effect sizes were calculated using *effectsize::eta_squared*, giving values of: `r e1_phase1_ES[1,2]` for the effect of configuration; `r e1_phase1_ES[2,2]` for the effect of epoch; and `r e1_phase1_ES[3,2]` for the interaction effect.

[^2]: The Bayesian analyses here follow the process outlined in @rouder2017. Briefly, we present the best fitting model evaluated against the null model, and then compare this fit to that of other models. Where the comparison of two models (i.e., A against B) reveals a Bayes Factor of greater than 3, this is taken as support for the components of model A that are not present in model B. Bayes Factors of less than 0.33 are taken as evidence in support of the equivalence of two models. Following @wetzels2011 we use the terms "substantial" (BF\>3; BF\<1/3), and "strong" (BF\>10; BF\<1/10) to reflect the levels of support for the results of the model comparisons.

```{r phase_2_BFs_exp1}
# Experiment 1 stats

# Statistics on Phase 2

phase_2 <- 
  rt_summary_data_e1 %>% 
  mutate(epoch = as.factor(epoch)) %>% 
  filter(epoch %in% c(6:10)) %>% 
  separate(TT, into = c("config", "targ_pos"), sep = ": ") %>%   # split the TT into factors of Config and target consistency
  mutate(config = as.factor(config),
         targ_pos = as.factor(targ_pos))

# computing effect sizes
e1_phase1_ES <- effectsize::eta_squared(aov_car(meanRT ~ Error(subj/TT*epoch), data = phase_1), 
                                        partial = TRUE)

# Statistics on Phase 2

e1_phase2_BF <- 
  anovaBF(meanRT ~ config * targ_pos * epoch + subj, 
          data = phase_2,
          whichRandom = "subj",
          iterations = numIterations)

exp1_ttestBF_data <- 
  rt_summary_data_e1 %>% 
  mutate(epoch = as.factor(epoch)) %>% 
  filter(epoch %in% c(6:10)) %>% 
  group_by(subj, TT) %>% 
  summarise(meanRT=mean(meanRT)) %>% 
  pivot_wider(values_from = meanRT, names_from = TT) %>% 
  janitor::clean_names()

exp1_p2_repC_randC <- ttestBF(x = exp1_ttestBF_data$repeated_consistent, 
                              y = exp1_ttestBF_data$random_consistent, 
                              paired = TRUE, 
                              iterations = numIterations)

exp1_p2_repI_randI <- ttestBF(x = exp1_ttestBF_data$repeated_inconsistent, 
                              y = exp1_ttestBF_data$random_inconsistent,
                              paired = TRUE, 
                              iterations = numIterations)

exp1_p2_repC_repI <- ttestBF(x = exp1_ttestBF_data$repeated_consistent, 
                             y = exp1_ttestBF_data$repeated_inconsistent, 
                             paired = TRUE, 
                             iterations = numIterations)

# computing effect sizes
e1_phase2_ES <- effectsize::eta_squared(aov_car(meanRT ~ Error(subj/config*targ_pos), 
                                                data = phase_2), 
                                        partial = TRUE)


```

A Bayesian ANOVA on the data from phase 2 (epochs 6-10) found strong support for the model containing the factors of configuration (repeated vs. random) and target position (consistent vs. inconsistent), `r report_BF_and_error(e1_phase2_BF[7], sci_not = FALSE)`. The next best fitting model contained these two factors and the interaction term, and was not a substantially worse fit to the data, `r report_BF_and_error(e1_phase2_BF[13]/e1_phase2_BF[7], sci_not = FALSE, hyp = "mc")`. The best fitting model (with factors of configuration and target position, but no interaction) was a substantially better fit to the data than the model containing only the factor of configuration `r report_BF_and_error(e1_phase2_BF[7]/e1_phase2_BF[2], sci_not = FALSE, hyp = "mc")` providing evidence that RTs were faster on consistent than inconsistent trials. There was no evidence for a difference between the best fitting model and the model containing only the factor of target position, `r report_BF_and_error(e1_phase2_BF[7]/e1_phase2_BF[5], sci_not = FALSE, hyp = "mc")`. The relevant effect sizes ($n^2_p$) were: `r e1_phase2_ES[1,2]` for the effect of configuration; `r e1_phase2_ES[2,2]` for the effect of target position; and `r e1_phase2_ES[3,2]` for the interaction of these two factors.

To further explore responses to the different trial types in phase 2, Bayesian t-tests were run using BayesFactor::ttestBF (using the default Cauchy prior) for comparisons between the repeated and random configurations, across the two target position conditions (consistent and inconsistent). This revealed substantial support for a difference between the response times on "repeated: consistent" trials and those on the respective random trials (random: consistent), `r report_BF_and_error(exp1_p2_repC_randC, sci_not = FALSE)`. There was also substantial evidence to suggest there was no meaningful difference between the response times for the "repeated: inconsistent" trials and the respective random trials, `r report_BF_and_error(exp1_p2_repI_randI, sci_not = FALSE)`.

To compare the size of the CC effect across phases 1 and 2, we calculated a "CC effect score" by subtracting the RT on consistent repeated trials from the RT on consistent random trials. Positive values reflect a CC effect. There was a CC effect score of `r spec_dec(pull(CC_transition_summary[1,2]),2)` ms (SD = `r spec_dec(pull(CC_transition_summary[1,3]),2)`) for the end of phase 1 (epochs 3-5) and a CC effect score of `r spec_dec(pull(CC_transition_summary[2,2]),2)` ms (SD = `r spec_dec(pull(CC_transition_summary[2,3]),2)`) for the start of phase 2 (epochs 6-8). A Bayesian t-test of the effect of phase on CC effect found moderate support for the null result, BF = `r as.numeric(as.vector(bf_transition_exp1))`, suggesting that the CC effect was not attenuated in the second phase.

## Discussion

In Experiment 1 we established a contextual cuing effect in the first phase, before introducing an endogenous cue for attention that directed the participants consistently towards the side of the screen on which the target was presented. Unsuprisingly, this had a dramatic effect on reducing RTs in all participants, but there remained a significant contextual cuing effect in this second phase. Thus, disrupting a substantial part of the early search process did not appear to affect the performance of the contextual cuing that had been established: notably there was evidence to suggest that the contextual cuing effect in phase 2 was of a similar magnitude to that which was observed in phase 1. On some repeated trials in phase 2, we positioned the target in a diametrically opposed location on the screen. On these trials there was no impact of the repeated configuration on performance.

These findings together support a view of contextual cuing in which the initial process of search is inefficient and seemingly random, not being guided in any way by the repeated context. Only when attention lands within a region of space approaching the target does the repeated configuration take over to guide search efficiently towards the target. The maintenance of a robust contextual cuing effect in phase 2 in the presence of the endogenous cue also suggests that CC is a robust and flexible behaviour. The apparent ability to entirely disrupt and negate the early part of the search process, whilst maintaining an intact CC effect, is somewhat at odds with the "general procedural learning" that has been suggested to occur in CC [@seitz2023]. According to this account, "...what may look an ineffective phase \[of search\] actually constitutes an important period during which procedural learning of a general scanning scheme becomes functional." [@seitz2023, p. 9]. The present data suggest that this aspect of search can be removed at no cost to CC.

# Experiment 2

In Experiment 1 we demonstrated that an established effect of contextual cuing is maintained even when attention is being guided by the presence of a valid endogenous cue. That is, we found that the *performance* of an established search behaviour in contextual cuing is not disrupted by the guidance of attention. In Experiment 2 we wanted to explore whether the *learning* of the contextual cue itself was affected by the presence of a valid endogenous cue. That is, does the presence of a valid endongenous cue, which leads to a controlled command of attention, limit the development of a contextual cuing effect. To do this, we trained each participant on two sets of repeating configurations. One of these sets was always presented in the presence of a valid endogenous cue, while the other set was always presented in the absence of the endogenous cue. The extent to which there is a "cue-competition" effect between the endogenous cue and the contextual cues can be examined by comparing the contextual cuing effect we observe for the two sets of configurations. Given the clear difference in RTs we observed in Experiment 1 between the trials with the endogenous cue present and the cue being absent, we anticipated the same difference in responding in Experiment 2. Therefore we also included a second phase of Experiment 2 in which we removed the endogenous cue entirely from the task. This second phase therefore allowed us to directly compare the contextual cuing for the two sets of configurations when RTs were at a comparable level.

Given the results of Experiment 1, we would anticipate that the size of the CC effect would be comparable in the two conditions. That is, Experiment 1 suggests that the CC effect is unaffected by the presence of the endogneous cue, and therefore that the effect is reliant on the cuing that occurs by distractors later in the search process. Removal of the inefficient period of search should not dramatically affect the development of CC.

## Method

### Participants

```{r demographics_exp2}

# get basic stats for Ps

data_exp2 <- 
  data_raw %>% 
  filter(exp == "CCC02") 

demographics <- 
  data_exp2 %>% 
  group_by(subj) %>% 
  slice(1) %>% 
  select(subj, age, gender)

```

`r Words(nrow(demographics))` undergraduate students from Lancaster University were recruited (mean age = `r mean(demographics$age)`, SD = `r sd(demographics$age)`; `r sum(demographics$gender=="f")` identified as female and `r sum(demographics$gender=="m")` as male) via the Psychology Research Participation System in the Department of Psychology at Lancaster University, in return for the opportunity to use the recruitment system for their own research in future years.

### Materials

Participants were tested in a quiet laboratory testing cubicle, with a standard PC and a 24" monitor set at a resolution of 1920 x 1080 pixels. Since the monitor was larger for this experiment, the dimensions of the presented stimuli had a proportional increase in size: Distractor stimuli were 11 mm square; the search grid was 240 mm square; the fixation cross was 6 mm square. In all other respects, the materials were the same as those detailed in Experiment 1.

### Design

Four repeated configurations were created in an identical manner to those used in Experiment 1. For each participant, two of these configurations were used for the condition in which the arrow cue was presented before the configuration, while two were used for the "control" condition (no arrow presented). As in Experiment 1, the four repeated configurations were paired with unique target positions from each of the four quadrants. We counterbalanced the use of the target quadrants across the factors of configuration type (repeated and random) and cue condition (arrow vs. no-arrow). For half of the participants, targets in the top left and bottom right were used for the repeated configurations presented with the arrow (cue-competition) condition, with targets in the top right and bottom left used for repeated configurations in the no-arrow (control) condition. For these participants, random configurations presented with the arrow had targets in the top right and bottom left, and random configurations without the arrow had targets in the top left and bottom right. For the other half of the participants these assignments were reversed (repeated-arrow: top-right and bottom-left; repeated-no arrow: top-left and bottom-right; random-arrow: top-left and bottom-right; random-no arrow: top-right and bottom-left).

### Procedure

The procedure was the same as Experiment 1 with the following differences. Participants received 320 trials in total. For the first 160 trials, the arrow was presented for the relevant conditions. For the final 160 trials, the arrow was never presented. Rest breaks were given every 60 trials.

## Results

```{r exclusions_exp2}

# participant exclusions 

to_summary <- 
  data_exp2 %>% 
  group_by(subj) %>% 
  summarise(meanTO = mean(timeout)) %>% 
  mutate(z_meanTO = scale(meanTO)[,1])

acc_summary <- 
  data_exp2 %>% 
  group_by(subj) %>% 
  summarise(meanAcc = mean(acc, na.rm = TRUE)) %>% 
  mutate(z_meanAcc = scale(meanAcc)[,1])

rt_summary <- 
  data_exp2 %>% 
  filter(acc == 1) %>% 
  group_by(subj) %>% 
  summarise(meanRT = mean(RT, na.rm = TRUE)) %>% 
  mutate(z_meanRT = scale(meanRT)[,1])

resp_summary_exp2 <- 
  to_summary %>% 
  left_join(acc_summary, by = "subj") %>% 
  left_join(rt_summary, by = "subj")

# is anyone an outlier in terms of timeouts?
outlier_to <- 
  resp_summary_exp2 %>% 
  filter(z_meanTO < -2.5 | z_meanTO > 2.5)

# is anyone an outlier in terms of accuracy?
outlier_acc <- 
  resp_summary_exp2 %>% 
  filter(z_meanAcc < -2.5 | z_meanAcc > 2.5)

# is anyone an outlier in terms of rt?
outlier_rt <- 
  resp_summary_exp2 %>% 
  filter(z_meanRT < -2.5 | z_meanRT > 2.5)

participants_removed <- 
  bind_rows(outlier_to, outlier_acc, outlier_rt) %>% 
  select(subj) %>% 
  mutate(subj = as.character(subj)) %>% 
  unique() %>% 
  pull()

```

Our criteria for removing outlier data were identical to Experiment 1. On average, trials ended with a timeout on `r spec_dec(100*mean(resp_summary_exp2$meanTO),2)`% of trials (SD = `r spec_dec(100*sd(resp_summary_exp2$meanTO),2)`). `r Words(nrow(outlier_to))` participants had an usually high proportion of timeouts. The mean accuracy of participants (not including timeout trials) was `r spec_dec(100*mean(resp_summary_exp2$meanAcc),2)`% (SD = `r spec_dec(100*sd(resp_summary_exp2$meanAcc),2)`%). `r Words(nrow(outlier_acc))` participant had an unusually low proportion of accurate trials and were removed from the sample. `r Words(nrow(outlier_rt))` participants were deemed to be an outlier in terms of mean RT.

```{r rm_outliers_exp2}

data_exp2_OR <- 
  data_exp2 %>% 
  filter(!subj %in% participants_removed)

data_exp2_OR <- 
  data_exp2_OR %>% 
  filter(timeout == 0,
         acc == 1) %>% 
  group_by(subj) %>% 
  mutate(zRT = scale(RT)[,1]) # calculate z scores on participant basis

rt_outlier_summary <- 
  data_exp2_OR %>% 
  group_by(subj) %>% 
  summarise(prop_rem = mean(zRT < -2.5 | zRT > 2.5))

# was anyone an outlier in prop removed?
outlier_prop_removed <- 
  rt_outlier_summary %>% 
  mutate(z_prop_rem = scale(prop_rem)[,1]) %>% 
  filter(z_prop_rem < -2.5 | z_prop_rem > 2.5)

data_e2_f <-
  data_exp2_OR %>%
  ungroup() %>%
  filter(zRT > -2.5 & zRT < 2.5) # keep data in this range

```

For the remaining `r words(nrow(rt_outlier_summary))` participants we removed trials with a timeout and inaccurate trials, before removing outliers from the RT data. On average, the proportion of outliers removed was `r spec_dec(100*mean(rt_outlier_summary$prop_rem),2)`% (SD = `r spec_dec(100*sd(rt_outlier_summary$prop_rem),2)`%). `r Words(nrow(outlier_prop_removed))` participant had an unusual proportion of trials removed as outlier RTs and were not included in the final analysis.

```{r }
#| label: fig-RT-exp2
#| fig-cap: RT data for Experiment 2. Error bars show standard error of the mean on normalised data.
#| fig-cap-location: bottom
#| out-width: 90%
#| out-height: 80%


factorCols <- c("subj","TT","patType", "patArrowP1", "tQuad")
data_e2_f[factorCols] <- lapply(data_e2_f[factorCols], factor)
data_e2_f$TT <- recode_factor(data_e2_f$TT, "1" = "repeated", "2" = "random")
data_e2_f$patArrowP1 <- recode_factor(data_e2_f$patArrowP1, "1" = "arrow", "2" = "no arrow")

factorLbls <- c("Repeated: Arrow", "Random: Arrow", "Repeated: No arrow", "Random: No arrow")

# compute grand mean RT 
grand_mean_e2 <- mean(data_e2_f$RT)

# create subj level mean and normalised RT variable
data_e2_f <- 
  data_e2_f %>%
  group_by(subj) %>% 
  mutate(subj_mean_rt = mean(RT),
         normRT = RT - subj_mean_rt + grand_mean_e2) %>% 
  select(-subj_mean_rt)

# summarise the data across the 10 epochs, by subj
rt_summary_data_e2 <- 
  data_e2_f %>% 
  group_by(subj, patArrowP1, epoch, TT) %>% 
  summarise(meanRT = mean(RT),
            mean_norm_RT = mean(normRT)) # used for normalised SE bars


# summarise at the group level and plot
rt_summary_data_e2 %>% 
  group_by(epoch, patArrowP1, TT) %>% 
  summarise(group_RT = mean(meanRT),
            group_SE = sd(mean_norm_RT)/sqrt(n())) %>% 
  ggplot(aes(x = epoch, y = group_RT, group = interaction(TT, patArrowP1))) +
  geom_line()+
  geom_errorbar(aes(ymin = group_RT - group_SE,
                    ymax = group_RT + group_SE),
                width = .2) +
  geom_point(aes(fill = interaction(TT, patArrowP1),
                 shape = interaction(TT, patArrowP1)), size = 5) +
  scale_fill_manual(name = "",
                    labels = factorLbls,
                    values= c(cbPalette[c(1,3)],c(cbPalette[c(1,3)]))) +
  scale_shape_manual(name = "",
                     labels = factorLbls,
                     values = c(21,21,22,22)) +
  labs(y = "RT (ms)",
       x = "Epochs of 32 trials") +
  theme(legend.text = element_text(size = 10),
        legend.spacing.x = unit(0.4, "cm"),
        legend.position = c(0.75,.75),
        legend.direction = "vertical") +
  guides(fill = guide_legend(byrow = TRUE)) +
  scale_y_continuous(limits = c(1200, 2800), breaks = seq(1200, 2800, 200)) 

```

```{r phase_1_BFs_exp2}
# Statistics on Stage 1

phase_1 <- 
  rt_summary_data_e2 %>% 
  mutate(epoch = as.factor(epoch)) %>% 
  filter(epoch %in% c(1:5))
  
# traditional anova
#aov_car(meanRT ~ Error(subj/patArrowP1*TT*epoch), data = phase_1)


e2_phase1_BF <- 
  anovaBF(meanRT ~ patArrowP1*TT*epoch + subj,
          data= data.frame(phase_1),
          whichRandom = "subj",
          iterations = numIterations)

# effect size
e2_phase1_ES <- effectsize::eta_squared(aov_car(meanRT ~ Error(subj/patArrowP1*TT*epoch), 
                                                data = phase_1), 
                                        partial = TRUE)

exp_2_CC <- 
  phase_1 %>% 
  group_by(subj, TT) %>% 
  summarise(meanRT = mean(meanRT))

effectsize::cohens_d(Pair(meanRT[TT == "repeated"],
                     meanRT[TT == "random"]) ~ 1,
                     data = exp_2_CC)


```

@fig-RT-exp2 shows the RT data across the 10 epochs of the experiment. Contextual cuing emerged rapidly in both the arrow and no-arrow conditions, with little suggestion that the CC effect was different in the two conditions. The phase 1 data were explored with a Bayesian ANOVA, which revealed that the best fitting model contained the factors of epoch, configuration (repeated vs. random), and endogenous cue (arrow present vs. arrow absent), with no interaction terms, `r report_BF_and_error(e2_phase1_BF[8])`. The next best fitting model contained all three factors and the interaction of epoch and configuration, `r report_BF_and_error(e2_phase1_BF[14])`, and this model was not a substantially worse fit to the data, `r report_BF_and_error(e2_phase1_BF[14]/e2_phase1_BF[8], sci_not = FALSE, hyp = "mc")`. All other models were substantially worse fits than the best fitting model, largest `r report_BF_and_error(e2_phase1_BF[11]/e2_phase1_BF[14], sci_not = FALSE, hyp = "mc")`. Importantly, the interaction term between the factors of endogenous cue and configuration did not improve the fit of the model, providing substantial support for the absence of this interaction, `r report_BF_and_error(e2_phase1_BF[11]/e2_phase1_BF[8], sci_not = FALSE, hyp = "mc")`. The relevant effect sizes ($n^2_p$) were: `r e2_phase1_ES[1,2]` for the effect of epoch; `r e2_phase1_ES[7,2]` for the effect of configuration; `r e2_phase1_ES[6,2]` for the effect of endogenous cue; `r e2_phase1_ES[5,2]` for the interaction effect between configuration and epoch; and `r e2_phase1_ES[4,2]` for the interaction between configuration and endogenous cue.

```{r phase_2_BFs_exp2}
# Statistics on Stage 2

phase_2 <- 
  rt_summary_data_e2 %>% 
  mutate(epoch = as.factor(epoch)) %>% 
  filter(epoch %in% c(6:10))

#aov_car(meanRT ~ Error(subj/patArrowP1*TT*epoch), data = phase_2)

# no evidence for an interaction of arrow training and TT
# is there evidence for the null?
e2_phase2_BF <- 
  anovaBF(meanRT ~ patArrowP1*TT*epoch + subj,
          data= data.frame(phase_2),
          whichRandom = "subj",
          iterations = numIterations)

# effect size
e2_phase2_ES <- effectsize::eta_squared(aov_car(meanRT ~ Error(subj/TT*epoch), 
                                                data = phase_2), 
                                        partial = TRUE)

```

When the endogenous cue was removed in the second half of the experiment, RTs were equivalent across the two conditions. An effect of configuration was seen for both cuing conditions, with little discernible difference between the size of the cuing effects. We conducted a Bayesian ANOVA with factors of epoch, configuration and endogenous cue condition (arrow vs. no-arrow). The best fitting model was that with just the factors of epoch and configuration with no interaction between the factors, `r report_BF_and_error(e2_phase2_BF[7])`. There was substantial support for this model over the next best fitting model, `r report_BF_and_error(e2_phase2_BF[7]/e2_phase2_BF[8], sci_not = FALSE, hyp = "mc")`. To examine the interaction of the configuration and endogenous cue factors, we compared the model containing those two factors to the model containing the two factors plus the interaction of configuration and endogenous cue, which revealed substantial support for the absence of an interaction, `r report_BF_and_error(e2_phase2_BF[10]/e2_phase2_BF[6], sci_not = FALSE, hyp = "mc")`. The relevant effect sizes ($n^2_p$) were: `r e2_phase2_ES[1,2]` for the effect of configuration; and `r e2_phase2_ES[2,2]` for the effect of epoch.

```{r all_data_BFs_exp2}
# Statistics on Stage 2

all_exp2 <- 
  rt_summary_data_e2 %>% 
  mutate(epoch = as.factor(epoch)) %>% 
  filter(epoch %in% c(1:10))

all_exp2_BF <- 
  anovaBF(meanRT ~ patArrowP1*TT + subj,
          data= data.frame(all_exp2),
          whichRandom = "subj",
          iterations = numIterations)

# effect size
e2_all2_ES <- effectsize::eta_squared(aov_car(meanRT ~ Error(subj/patArrowP1*TT), 
                                                data = all_exp2), 
                                        partial = TRUE)

```

To provide further support for the absence of the interaction between the factors of configuration type and endogenous cue, the data from across the experiment (epochs 1-10) were analysed with a Bayesian ANOVA with only the factors of configuration and endogenous cue. The best fitting model was that with the two factors and no interaction, `r report_BF_and_error(all_exp2_BF[3])`. The addition of the interaction term did not strengthen the model, with substantial evidence for the absence of the interaction, `r report_BF_and_error(all_exp2_BF[4]/all_exp2_BF[3], sci_not = FALSE, hyp = "mc")`. The relevant effect sizes ($n^2_p$) were: `r e2_all2_ES[1,2]` for the effect of the endogenous cue; and `r e2_all2_ES[2,2]` for the effect of configuration.

## Discussion

Experiment 2 sought to examine whether the presence of a valid endogenous cue would impair the acquisition of a contextual cuing effect. In the first phase, two sets of configurations were trained, one of which was always presented in the presence of the endogenous cue, and one set which was presented without the endogenous cue. Overall there was considerable evidence that the cue was processed and acted upon, as response times to the target were much faster on cued trials. However, there was no evidence to suggest that the instructed guidance of attention impaired the acquisition of the configurations on those trials. Furthermore, when the endogenous cue was never presented in the final phase of the experiment, the size of the contextual cuing effect was equivalent between the two sets of configurations; the Bayesian analyses found support for the equivalence of these CC effects.

The data from Experiment 2 are consistent with the findings of Experiment 1: the early phase of search is inconsequential for the development of contextual cuing. The equivalence of the CC effects across the two groups (cued and uncued) would  suggest that the guidance by the context was driven entirely by the distractors that appear close to the target. The longer search times in the uncued condition clearly indicate that a far greater number of distractors are processed in this condition, but that the enhancement of attentional guidance by the repeated distractors is limited to the later part of the search process, and therefore those nearer to the target. Alternatively, it is at least possible that the repeated distractors are processed rapidly at the onset of the trial, before the effects of the endogenous cue on attention are observed. If this is the case, then those repeated distractors that influence search (producing the CC effect) need not be localised around the target. Experiment 3 provides a test of these two possible accounts.

# Experiment 3

As noted earlier, the analysis of eye-movements during contextual cuing tasks [@beesley2018; @tseng2004] has revealed a characteristic scanning pattern comprising two phases: search initially occurs in a seemingly random manner, as the eyes move between distractors in the central region of the distractor field, before then moving in a more directed manner towards the target position. Contextual cuing appears to result from a cessation of the first (random) search phase at an earlier time point in the entire search process, such that processing of repeated distractors will, on average, result in fewer fixations. With respect to the current study, in Experiments 1 and 2 we have initially directed attention towards the side of the screen that contains the target on cued trials. This will bring about an early cessation of the first phase of the search process. From here, however, it seems that search is still facilitated by the repetition of the context.

To test this characterisation of the interaction between the endogenous cue and the repeated context, we exposed participants to the same procedure as used in phase 1 of Experiment 1, which establishes a contextual cuing effect prior to the use of the endogenous cue. In a second phase we then presented the endogenous cue on every trial (as in Experiment 1), but we manipulated the presence of the repeated distractors within the configurations. For each repeated configuration we created two variations: in the "proximal" configurations, only the distractors in the quadrant containing the target match those from the full repeated configuration, while the distractors in the other three quadrants were randomly arranged on each trial; in the "distal" configurations, the distractors closest to the target were randomised, while the distractors in the other three quadrants were the same as those in the full repeated configuration. During this phase we also presented fully repeated configurations and fully randomised configurations. Comparison of the response times across these four trial types will allow us to determine the contribution of proximal and distal distractors to the CC effect when attention is cued endogenously.

## Method

### Participants

```{r}

# get basic stats for Ps

data_exp3 <- 
  data_raw %>% 
  filter(exp == "CCC03") 

# rename TT variable
data_exp3 <- 
  data_exp3 %>% 
  mutate(TT = fct_recode(TT, 
                         "Repeated DISTAL" = "global (local random)",
                         "Repeated PROXIMAL" = "local (global random)",
                         "Random" = "random",
                         "Repeated" = "repeated")) %>% 
  mutate(TT = fct_relevel(TT, 
                          "Repeated", 
                          "Random", 
                          "Repeated DISTAL", 
                          "Repeated PROXIMAL"))

demographics <- 
  data_exp3 %>% 
  group_by(subj) %>% 
  slice(1) %>% 
  select(subj, age, gender)

```

`r Words(nrow(demographics))` undergraduate students from Lancaster University were recruited (mean age = `r mean(demographics$age)`, SD = `r sd(demographics$age)`; `r sum(demographics$gender=="f")` identified as female and `r sum(demographics$gender=="m")` as male) via the Psychology Research Participation System in the Department of Psychology at Lancaster University, in return for the opportunity to use the recruitment system for their own research in future years.

### Materials

All materials, including stimuli and testing environment were identical to Experiment 2.

### Design

The design of phase 1 was identical to Experiment 1, with four repeated configurations created and presented with random configurations during this phase. For phase 2, each of the four configurations was manipulated to create two alternative conditions. In the "Repeated distal" condition, the four distractors in the target quadrant were randomly arranged on each trial, while the 12 distractors in the other three quadrants were presented in the same positions as had been trained in phase 1. Thus, slower response times for this condition (compared to the fully repeated configurations) would indicate the extent to which participants CC was governed by the distractors closest to the target. For the "Repeated proximal" condition, the four distractors in the target quadrant were presented in the same positions as had been trained in phase 1, while the 12 distractors in the other three quadrants were randomly arranged on each trial. Thus, slower response times for this condition (compared to the fully repeated configurations) would indicate the extent to which CC was governed by the distractors further from the target. Comparison of the RTs for these different configurations with those of the random configurations would allow for the assessment of whether these subsets of distractors had *any* contribution to the CC effect that had developed during phase 1.

### Procedure

The procedure was identical to Experiment 1.

## Results

```{r}

# participant exclusions 

to_summary <- 
  data_exp3 %>% 
  group_by(subj) %>% 
  summarise(meanTO = mean(timeout)) %>% 
  mutate(z_meanTO = scale(meanTO)[,1])

acc_summary <- 
  data_exp3 %>% 
  group_by(subj) %>% 
  summarise(meanAcc = mean(acc, na.rm = TRUE)) %>% 
  mutate(z_meanAcc = scale(meanAcc)[,1])

rt_summary <- 
  data_exp3 %>% 
  filter(acc == 1) %>% 
  group_by(subj) %>% 
  summarise(meanRT = mean(RT, na.rm = TRUE)) %>% 
  mutate(z_meanRT = scale(meanRT)[,1])

resp_summary_exp3 <- 
  to_summary %>% 
  left_join(acc_summary, by = "subj") %>% 
  left_join(rt_summary, by = "subj")

# is anyone an outlier in terms of timeouts?
outlier_to <- 
  resp_summary_exp3 %>% 
  filter(z_meanTO < -2.5 | z_meanTO > 2.5)

# is anyone an outlier in terms of accuracy?
outlier_acc <- 
  resp_summary_exp3 %>% 
  filter(z_meanAcc < -2.5 | z_meanAcc > 2.5)

# is anyone an outlier in terms of rt?
outlier_rt <- 
  resp_summary_exp3 %>% 
  filter(z_meanRT < -2.5 | z_meanRT > 2.5)

participants_removed <- 
  bind_rows(outlier_to, outlier_acc, outlier_rt) %>% 
  select(subj) %>% 
  mutate(subj = as.character(subj)) %>% 
  unique() %>% 
  pull()

```

Our criteria for removing outlier data were identical to Experiment 1. On average, trials ended with a timeout on `r spec_dec(100*mean(resp_summary_exp3$meanTO),2)`% (SD = `r spec_dec(100*sd(resp_summary_exp3$meanTO),2)`) of trials . `r Words(nrow(outlier_to))` participants had an usually high proportion of timeouts and were removed from the sample. The mean accuracy of participants (not including timeout trials) was `r spec_dec(100*mean(resp_summary_exp3$meanAcc),2)`% (SD = `r spec_dec(100*sd(resp_summary_exp3$meanAcc),2)`%). `r Words(nrow(outlier_acc))` participants that had an unusually low proportion of accurate trials and were also removed. `r Words(nrow(outlier_rt))` participants were deemed to be an outlier in terms of mean RT.

```{r}

data_exp3_OR <- 
  data_exp3 %>% 
  filter(!subj %in% participants_removed)

data_exp3_OR <- 
  data_exp3_OR %>% 
  filter(timeout == 0,
         acc == 1) %>% 
  group_by(subj) %>% 
  mutate(zRT = scale(RT)[,1]) # calculate z scores on participant basis

rt_outlier_summary <- 
  data_exp3_OR %>% 
  group_by(subj) %>% 
  summarise(prop_rem = mean(zRT < -2.5 | zRT > 2.5))

# was anyone an outlier in prop removed?
outlier_prop_removed <- 
  rt_outlier_summary %>% 
  mutate(z_prop_rem = scale(prop_rem)[,1]) %>% 
  filter(z_prop_rem < -2.5 | z_prop_rem > 2.5)

data_e3_f <-
  data_exp3_OR %>%
  ungroup() %>%
  filter(zRT > -2.5 & zRT < 2.5) # keep data in this range

```

For the remaining `r words(nrow(rt_outlier_summary))` participants we removed trials with a timeout and inaccurate trials, before removing outliers from the RT data. On average, the proportion of outliers removed was `r spec_dec(100*mean(rt_outlier_summary$prop_rem),2)`% (SD = `r spec_dec(100*sd(rt_outlier_summary$prop_rem),2)`%). `r Words(nrow(outlier_prop_removed))` participants had an unusual proportion of trials removed as outlier RTs.

```{r }
grand_mean_e3 <- mean(data_e3_f$RT)

# create subj level mean and normalised RT variable
data_e3_f <- 
  data_e3_f %>%
  group_by(subj) %>% 
  mutate(subj_mean_rt = mean(RT),
         normRT = RT - subj_mean_rt + grand_mean_e3) %>% 
  select(-subj_mean_rt)


# summarise the data across the 10 epochs, by subj
rt_summary_data_e3 <-
  data_e3_f %>%
  group_by(subj, epoch, TT) %>%
  summarise(meanRT = mean(RT),
            normRT = mean(normRT))

# summarise at the group level and plot
rf_fig_exp3 <- 
  rt_summary_data_e3 %>%
  group_by(epoch, TT) %>%
  summarise(group_RT = mean(meanRT),
            group_SE = sd(normRT)/sqrt(n())) %>%
  ggplot(aes(x = epoch, y = group_RT, group = TT, fill = TT)) +
  geom_line(size = .5) +
  geom_errorbar(aes(ymin = group_RT - group_SE,
                    ymax = group_RT + group_SE),
                width = .05) +
    geom_point(aes(fill = TT),size = 5, shape = 21, alpha = 1) +
  labs(y = "RT (ms)",
       x = "Epochs of 32 trials") +
  scale_fill_manual(name = "",
                    values = cbPalette[c(1,3,2,4)]) +
  theme(legend.text = element_text(size = 10),
        legend.spacing.x = unit(0.4, "cm"),
        legend.position = c(0.25,0.25),
        legend.direction = "vertical") +
  guides(fill = guide_legend(byrow = TRUE)) +
  scale_y_continuous(limits = c(1000, 2600), breaks = seq(1000, 2600, 200))

# summarise at the group level for phase 2
phase_2_TT_e3 <- 
  rt_summary_data_e3 %>%
  filter(epoch %in% c(6,10)) %>% 
  group_by(TT) %>%
  summarise(group_RT = mean(meanRT),
            group_SE = sd(normRT)/sqrt(n()))

# plot for inset graph
phase_2_avg_RT <- 
  phase_2_TT_e3 %>%
  ggplot(aes(x = TT, y = group_RT, fill = TT)) +
  geom_col(colour = "black", size = 1) +
  geom_errorbar(aes(ymin = group_RT - group_SE,
                    ymax = group_RT + group_SE),
                width = .05, size = 0.5
                ) +
  coord_cartesian(ylim = c(1100,1500)) +
  labs(title = "Phase 2 averages",
       y = "RT (ms)",
       x = "Configuration type") +
  scale_fill_manual(name = "",
                  values = cbPalette[c(1,3,2,4)]) +
  theme(plot.title = element_text(size = 10, hjust = 0.5, face = "bold"),
        plot.background = element_rect(fill = "#f2f2f2", colour = "black"),
        panel.background = element_rect(fill = "#f2f2f2"),
        legend.position = "None",
        axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 8),
        axis.title.y = element_text(size = 10),
        axis.ticks.x = element_blank()) +
  scale_x_discrete(labels = scales::label_wrap(10))
```

```{r }
#| label: fig-RT-exp3
#| fig-cap: RT data for Experiment 3. Error bars show standard error of the mean on normalised data.
#| fig-cap-location: bottom
#| out-width: 90%
#| out-height: 80%


rf_fig_exp3 + inset_element(phase_2_avg_RT, 0.55, 0.5, 1, 1)

```

```{r}
# Statistics on Stage 1

phase_1 <- 
  rt_summary_data_e3 %>% 
  mutate(epoch = as.factor(epoch)) %>% 
  filter(epoch %in% c(1:5))

#aov_car(meanRT ~ Error(subj/TT*epoch), data = phase_1)

e3_phase1_BF <- anovaBF(meanRT ~ TT*epoch + subj,
                       whichRandom = "subj",
                       data = phase_1,
                       iterations = numIterations)

# effect size
e3_phase1_ES <- effectsize::eta_squared(aov_car(meanRT ~ Error(subj/TT*epoch), 
                                                data = phase_1), 
                                        partial = TRUE)

exp_3_CC <- 
  phase_1 %>% 
  group_by(subj, TT) %>% 
  summarise(meanRT = mean(meanRT))

effectsize::cohens_d(Pair(meanRT[TT == "Repeated"],
                     meanRT[TT == "Random"]) ~ 1,
                     data = exp_3_CC)

```

@fig-RT-exp3 (main panel) shows the RT data across the 10 epochs of Experiment 3. As in Experiment 1, contextual cuing was readily established in phase 1. These data were subjected to a Bayesian ANOVA which revealed that the best fitting model contained the factors of configuration (repeated vs. random) and epoch, and an interaction between those factors, `r report_BF_and_error(e3_phase1_BF[4])`. However, the model without the interaction provided a strong fit to the data, `r report_BF_and_error(e3_phase1_BF[3])`, and a comparison between the two models did not find any evidence in support of the interaction term, `r report_BF_and_error(e3_phase1_BF[3]/e3_phase1_BF[4], sci_not = FALSE, hyp = "mc")`. There was strong support for the best fitting model over the remaining models, smallest `r report_BF_and_error(e3_phase1_BF[4]/e3_phase1_BF[1], sci_not = FALSE, hyp = "mc")`, providing strong support for the factors of epoch and configuration. The relevant effect sizes ($n^2_p$) were: `r e3_phase1_ES[1,2]` for the effect of the epoch; and `r e3_phase1_ES[2,2]` for the effect of configuration; and `r e3_phase1_ES[3,2]` for the interaction of these two factors.

```{r}
# Statistics on Stage 2

phase_2 <- 
  rt_summary_data_e3 %>% 
  mutate(epoch = as.factor(epoch)) %>% 
  filter(epoch %in% c(6:10))

#aov_car(meanRT ~ Error(subj/TT*epoch), data = phase_2)

# Bayesian analysis of phase 2

e3_phase2_BF <- anovaBF(meanRT ~ TT*epoch + subj,
                       whichRandom = "subj",
                       data = phase_2,
                       iterations = numIterations)

# effect size
e3_phase2_ES <- effectsize::eta_squared(aov_car(meanRT ~ Error(subj/TT*epoch), 
                                                data = phase_2), 
                                        partial = TRUE)

ttestBF_data <- 
  phase_2 %>% 
  group_by(subj, TT) %>% 
  summarise(meanRT=mean(meanRT)) %>% 
  pivot_wider(values_from = meanRT, names_from = TT) %>% 
  janitor::clean_names()

exp3_p2_rep_rand <- ttestBF(x = ttestBF_data$repeated, y = ttestBF_data$random, paired = TRUE, iterations = numIterations)
exp3_p2_rep_global <- ttestBF(x = ttestBF_data$repeated, y = ttestBF_data$repeated_distal, paired = TRUE, iterations = numIterations)
exp3_p2_rep_local <- ttestBF(x = ttestBF_data$repeated, y = ttestBF_data$repeated_proximal, paired = TRUE, iterations = numIterations)
exp3_p2_global_rand <- ttestBF(x = ttestBF_data$repeated_distal, y = ttestBF_data$random, paired = TRUE, iterations = numIterations)
exp3_p2_local_rand <- ttestBF(x = ttestBF_data$repeated_proximal, y = ttestBF_data$random, paired = TRUE, iterations = numIterations)
exp3_p2_global_local <- ttestBF(x = ttestBF_data$repeated_distal, y = ttestBF_data$repeated_proximal, paired = TRUE, iterations = numIterations)



```

The response times decreased significantly with the presentation of the valid endogenous cue in phase 2. Response times to the fully repeated configurations were somewhat comparable to those when just the proximal repeated distractors were present. Response times for the distal repeated distractors appeared to be slower and comparable to the fully random configurations. The phase 2 data were subjected to a Bayesian ANOVA which found that the best fitting model contained the factors of configuration and epoch but no interaction between the factors, `r report_BF_and_error(e3_phase2_BF[3])`. This model provided a superior fit to the data compared to the next best fitting model that included the two factors and the interaction term, `r report_BF_and_error(e3_phase2_BF[3]/e3_phase2_BF[4], sci_not = FALSE, hyp = "mc")`, providing strong support for the contribution of the two factors and the absence of an interaction between the two factors. The relevant effect sizes ($n^2_p$) were: `r e3_phase2_ES[1,2]` for the effect of configuration; and `r e3_phase2_ES[2,2]` for the effect of epoch.

The inset graph in Figure @fig-RT-exp3 shows the mean RTs to the four types of configuration, averaged across the 5 epochs of phase 2. To explore the differences in response times, Bayesian t-tests were run for all pairwise comparisons. The response times to repeated and repeated-proximal configurations were both faster than those to random configurations, smallest `r report_BF_and_error(exp3_p2_local_rand, sci_not = FALSE)`. In contrast, there was no evidence that the response times to repeated-distal configurations were different from those to random configurations, `r report_BF_and_error(exp3_p2_global_rand, sci_not = FALSE)`. Response times to repeated configurations were faster than those to repeated-proximal configurations, `r report_BF_and_error(exp3_p2_rep_local, sci_not = FALSE)`. Response times to repeated-proximal configurations were faster than those to repeated-distal configurations, `r report_BF_and_error(exp3_p2_global_local, sci_not = FALSE)`.

## Discussion

Experiment 3 explored the localisation of the distractors driving contextual cuing when attention is guided by an endogenous cue. As expected, there was substantial evidence that contextual cuing was present when the distractors close to the target were maintained, but not when these distractors were randomly arranged. These data appear to confirm a clear order to the interplay between the two drivers of attention: initially attention is guided by the endogenous cue towards one half of the screen, and then search is refined by the presence of the valid configural cues (the repeated distractors). Like in Experiment 1, the phase 2 data demonstrate the resilience of the CC effect to changes in the search process. Despite visual search never commencing in a cued manner during the initial acquisition period of phase 1, a CC effect was readily observed in phase 2. Thus it seems that the stored representations of configurations surrounding target positions are flexibly deployed in visual search, despite changing demands on controlled attentional processes. Notably the fully repeated configurations exerted more of a benefit on search than those containing only the proximal distractors, suggesting that the repeating distractors beyond the target quadrant have some (but possibly lesser) influence on search [@brady2007].

These data lend support to the notion that the effect of the repeated configuration is a late process within visual search, and that each trial commences with a random search process that is not guided by the repeated configuration [@beesley2018; @tseng2004]. In some ways, these findings represent a paradox of CC: the cuing effect occurs almost at the point at which target detection has been made. One interpretation would be that this exemplifies the role of spatial contiguity in the formation of visual associations [@renaux2017]. Alternatively, it provides support for the proposed "decision threshold" accounts of CC [@kunar2007; @sewell2018], which posit that the repeated distractors close to the target ensure a reduced threshold for target detection, resulting in faster response times.

# General Discussion

```{r}
# exploratory analysis of effect size across three experiments

comb_data <- 
  rbind(data_e1_f,data_e2_f, data_e3_f)

comb_data <-
  comb_data %>% 
  filter(epoch %in% c(1:5)) %>% 
  ungroup()

comb_data <-
  comb_data %>% 
  mutate(TT = case_match(TT,
                         c("Repeated: consistent", "repeated", "Repeated") ~ "repeated",
                         c("Random: consistent", "random", "Random") ~ "random"))

comb_data <- 
  comb_data %>% 
  filter(patArrowP1 %in% c("no arrow", NA))

summary_comb_data <- 
  comb_data %>% 
  group_by(exp, subj, TT) %>% 
  summarise(meanRT = mean(RT)) %>% 
  ungroup()

t.test(Pair(meanRT[TT == "repeated"],
            meanRT[TT == "random"]) ~ 1,
       data = summary_comb_data)


effectsize::cohens_d(Pair(meanRT[TT == "repeated"],
                          meanRT[TT == "random"]) ~ 1,
                     data = summary_comb_data)

summary_comb_data %>% 
  ggplot(aes(y = meanRT, x = TT, group = subj)) +
  geom_line()

blah <- 
summary_comb_data %>% 
  pivot_wider(names_from = TT, values_from = meanRT) %>% 
  mutate(CC_effect = random - repeated)

mean(blah$CC_effect[blah$exp == "CCC03"])/sd(blah$CC_effect[blah$exp == "CCC03"])


```



Three experiments explored the impact of a central endogenous cue of attention on the contextual cuing of visual search. In Experiment 1, having established a contextual cuing effect, each trial was preceded by a central endogenous cue of attention in the form of an arrow, directing attention towards the side of the screen in which the target was positioned (this arrow cue was always valid, as was the case in each of the three experiments). Despite participants clearly using this cue, visual search was still facilitated by the presence of the repeating pattern of visual search. This experiment demonstrated that, once acquired, the activation of the memory representation and its impact on performance of visual search remains intact in the presence of a top-down instruction to guide attention. Experiment 2 examined the storage of these contextual representations, and whether these were impaired by an endogenous cue guiding search. We found equivalent levels of contextual cuing for two sets of configurations, one of which was paired with the cue and one which was not. Together, these two experiments suggest a seamless interplay between these two factors governing attention in visual search: the endogenous cue initially guides attention and the repeated configuration continues to refine and guide attention towards a fixation on the target. In Experiment 3 we therefore explored whether the localised distractors around the target were sufficient to generate CC following the guidance by the endogenous cue. Indeed, there was a significant CC effect in the case of the proximal distractors, albeit slightly weaker than that generated by the entire repeated configuration. Importantly, repeated configurations that did not contain the proximal distractors failed to generate a CC effect, suggesting that the proximal distractors play a crucial role in search following the guidance of attention by the endogenous cue.

The current data reveal that the influence of repeated contexts has a relatively late control on behaviour in visual search. Previous analysis of eye-movements during CC [@beesley2018; @tseng2004] has shown that contextual cuing (and visual search more generally) has two characteristic components. The first of these is an inefficient search process where search fails to move towards the target in trials with more fixations. This is followed by a phase in which monotonic, positive increments are made toward the target position in the final 3 to 4 fixations. CC reduces the frequency of trials with the initial (random) search period (there are more of such trials for random configurations and fewer for repeated configurations). Thus, the effect of the endogenous central cue in the current study is to eliminate, or considerably reduce, the engagement with this first phase of the search process. The results of this study strongly imply that the positive associative information in the repeating configurations is extracted in the final stages of search and is localised around the target. This is true both in terms of the performance of an acquired configuration (Experiments 1 and 3) and the acquisition of the representation for that configuration (Experiment 2). 

Recently, work by @seitz2023 has suggested that CC is made up of both configuration-specific learning, and eye-movements that reflect "...procedural learning of a general scanning scheme..." [p. 9]. This latter aspect of the acquired CC behaviour was suggested to occur within the earlier period of inefficient search. If such a behaviour developed in our CC task, it is clear that this behaviour is not critical to the performance of the CC effect (in Exp 1 and Exp 3), or to the development of the learned behaviour (Exp 2). Contrary to the suggestion by @seitz2023, it's at least possible that such general procedural learning has some influence over the later stages of search. However, such an account would have to assume that this learnt behaviour is flexible enough to survive the curtailment of a considerable portion of the pattern of eye-movements. We would argue it is simpler to account for the present data by assuming the expression of a pattern-specific sequence of eye-movements that occurs late on in the search process, following the period of ineffective (random) search. 

The current data are also consistent with a late-stage "response threshold" account of CC [@sewell2018]. According to this perspective, the facilitation for repeated configurations occurs because the target is more readily detected amongst the surrounding distractors. Such an account can be viewed as more closely aligned to a mechanism that enhances perceptual discrimination, rather than one of facilitating search. In the present tasks, such a mechanism would not be affected by the onset of the endogenous cue and the curtailing of the early period of ineffective search. Taken together, the results here point towards the possibility of three components to the behaviour in CC: an early ineffective search, followed by enhanced localisation and increased perceptual discrimination of the target, driven by the distractors closest to the target. 

The effect of CC on visual search has frequently been characterised as an automatic influence on behaviour [e.g., @chun1998; @chun2000a; @geyer2021]. This characterisation of CC comes from multiple aspects of the observed effect. Updating of the associations is somewhat slow and seemingly inflexible to changes in the acquired associations [e.g., @zellin2013; @makovski2011; @manginelli2009], and therefore perhaps reflects a habitual form of behaviour. In addition, contextual cuing has frequently been observed in the absence of above-chance recognition memory for the repeating search configurations [e.g., @colagiuri2016], which suggests a non-conscious, automatically evoked form of behaviour. Despite this persistent characterisation, the automaticity (or controllability) of CC has rarely been directly tested in the literature. To our knowledge, only the experiments of Luque and colleagues [@luque2017b; @luque2021] have directly assessed this aspect of CC, by placing the influence of the configuration in competition with top-down goals in the task. Their findings supported the conclusion that CC performance can be controlled and will not guide search for the target when another aspect of the task governs attentional control. In the current study, the repeated configurations continued to have an influence on search performance even when attention had been guided by the endogenous cue. In this respect, it might be suggested that these results are somewhat at odds with the conclusions of Luque and colleagues [@luque2017b; @luque2021].

To what extent is this behaviour best characterised as "automatic" in nature? Arguably the clearest demonstration of an automatic effect of a stimulus on behaviour is when the associated behaviour is elicited even when it is counter-productive to the current goals [@moors2006]. We could argue that such a test was constructed in the repeated inconsistent trials of Experiment 1, in which the repeated configuration was associated with a target that was previously located in a position on the opposite side of the screen to the direction indicated by the endogenous cue. If the repeated configuration had an effect on behaviour on these trials, we would have expected to see slower response times compared to random trials. This was not the case: response times were equivalent in these two conditions. As such it is hard to claim here that the configuration is having an *automatic* effect on behaviour, according to this strict characterisation of such an effect. Nevertheless, the experiments here reveal a flexible interplay between top-down drivers of attention and configuration-driven effects of attention in CC.



\newpage

```{r}

# save results of Bayesian ANOVAs

save(e1_phase1_BF, 
     e1_phase2_BF,
     e2_phase1_BF,
     e2_phase2_BF,
     e3_phase1_BF,
     e3_phase2_BF,
     file = "anova_BF_saved_results.RData")

```

# Declarations

### Funding 
Not applicable

### Conflicts of interest/Competing interests 
Not applicable

### Ethics approval 
Ethical approval was granted by the Department of Psychology Ethics Committee, Lancaster University, conforming to the British Psychological Society Code of Ethics and Conduct.

### Consent to participate 
All participants gave informed consent to participate in the study. All data was stored anonymously at the point of collection.

### Consent for publication
All participants gave informed consent for their (anonymised) data to be used in publication.

### Availability of data and materials
The raw data and experimental materials are freely available at the project repository <http://github.com/tombeesley/CC_EC>

### Code availability 
The data analysis scripts and the manuscript source files are available at <http://github.com/tombeesley/CC_EC>. The analyses reported in this manuscript are computationally reproducible from the manuscript source files (using R v4.4.0). 

### Authors' contributions 
T.B. Designed the experiments; programmed the experiments; conducted the statistical analyses; wrote the manuscript.
D.L. Designed the experiments; contributed to the writing of the manuscript. 
L.E., H.B., I.S., I.J., contributed to the design of the experiments; collected the data; approved the final manuscript version.


\newpage

<!-- References will auto-populate in the refs div below -->

::: {#refs}
:::
